# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}
####### BUILDSLAVES
from buildbot.buildslave import BuildSlave
c['slaves'] = [BuildSlave("johnford.info-slave1", "pass")]
c['slavePortnum'] = 9989

####### CHANGESOURCES
from buildbot.changes.gitpoller import GitPoller
c['change_source'] = GitPoller(
        'git://github.com/zpao/v8monkey.git',
        branch='master', pollinterval=600)

####### SCHEDULERS
from buildbot.scheduler import Scheduler
c['schedulers'] = []
c['schedulers'].append(Scheduler(name="all", branch=None,
                                 treeStableTimer=None,
                                 builderNames=["fedora"]))

####### BUILDERS
from buildbot.process.factory import BuildFactory
from buildbot.steps.source import Git
from buildbot.steps.shell import Configure, Compile, ShellCommand

factory = BuildFactory()
# check out the source
factory.addStep(Git(repourl='git://github.com/zpao/v8monkey.git', mode='copy'))
factory.addStep(ShellCommand(command="autoconf-2.13", workdir="build/js/src"))
factory.addStep(Configure(command="../build/js/src/configure", workdir="objdir"))
factory.addStep(Compile(workdir="objdir"))

from buildbot.config import BuilderConfig

c['builders'] = []
c['builders'].append(
    BuilderConfig(name="fedora",
      slavenames=["johnford.info-slave1"],
      factory=factory))

####### STATUS TARGETS

# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# including web pages, email senders, and IRC bots.

c['status'] = []

from buildbot.status import html
from buildbot.status.words import IRC
from buildbot.status.web import auth, authz
authz_cfg=authz.Authz(
    # change any of these to True to enable; see the manual for more
    # options
    gracefulShutdown = False,
    forceBuild = True, # use this to test your slave once it is set up
    forceAllBuilds = False,
    pingBuilder = False,
    stopBuild = False,
    stopAllBuilds = False,
    cancelPendingBuild = False,
)
notify_events={'successToFailure': 1,
               'failureToSuccess': 1,
               'exception': 1,
}
c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))
c['status'].append(IRC(host='irc.mozilla.org', nick='gertrude', 
                       channels=['#spidernode'], port=6697, useSSL=True,
                       notify_events=notify_events))

####### PROJECT IDENTITY

# the 'projectName' string will be used to describe the project that this
# buildbot is working on. For example, it is used as the title of the
# waterfall HTML page. The 'projectURL' string will be used to provide a link
# from buildbot HTML pages to your project's home page.

c['projectName'] = "spidernode"
c['projectURL'] = "http://divmod.org/trac/wiki/DivmodPyflakes"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = "http://johnford.info:8010/"

####### DB URL

# This specifies what database buildbot uses to store change and scheduler
# state.  You can leave this at its default for all but the largest
# installations.
c['db_url'] = "sqlite:///state.sqlite"

